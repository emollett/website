{"data":{"site":{"siteMetadata":{"title":"Blog by Eleanor Mollett","subtitle":"Delivery manager currently working for NICE in Manchester. Previously DWP, HMRC and the Home Office","copyright":"© All rights reserved Eleanor Mollett 2019.","author":{"name":"Eleanor Mollett","twitter":"@eleanormollett"},"disqusShortname":"","url":"https://lumen.netlify.com"}},"markdownRemark":{"id":"e697a273-2bd7-59b4-ae44-408fc8a3843d","html":"<p>We are currently having one of our quarterly spike weeks on our team, and for once I am managing to protect my own time and do my own spike. To help me remember what I’ve learned, I plan on writing what I did each day.</p>\n<hr>\n<h1>Day 1</h1>\n<p>Our theme this time is infrastructure, and I’ve decided to automate my deployment pipeline. To do this I want to set up so that I can spin up new EC2 instances each time I deploy, and use AWS CodeDeploy to deploy to them. Currently I have a pipeline set up that sets off a build when I push to master in github, but I still need to ssh into my EC2 instance to pull down the build artifact from an S3 bucket. I wrote about how I initially set it up <a href=\"http://eleanormollett.com/posts/What-I-learned-deploying\">here</a>, and it has moved on a little since.</p>\n<p>My plan was to set up an EC2 template which would have all my current parameters like the AMI I am using, the security groups I have set up etc defined to make it easy to reproduce each time I launch a new instance. This part was very straightforward, it was simply a case of working through the options.</p>\n<p>I started hitting issues when I went to configure it to install the CodeDeploy agent on start up. I was following the instructions in <a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide/instances-ec2-create.html\">the documentation</a>, but when I went in to check the CodeDeploy service was running, it wasn’t. I went through a few times, checking the variables I was entering, trying out some variations I found in other tutorials. Nothing.</p>\n<p>Next, I decided to launch an instance without the User Data instructions for launching the CodeDeploy agent and running them myself after the instance had launched. It worked.</p>\n<p>Although this was incredibly frustrating, at least it reassured me that it should work.</p>\n<p>These are the instructions I used from the documentation:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#!/bin/bash\napt-get -y update\napt-get -y install ruby\napt-get -y install wget\ncd /home/ubuntu\nwget https://aws-codedeploy-eu-west-2.s3.amazonaws.com/latest/install\nchmod +x ./install\n./install auto</code></pre></div>\n<p>You don’t really get much indication about what is going wrong, so after several attempts to use the logs from the console which only occasionally showed me anything useful, I followed the instructions <a href=\"https://aws.amazon.com/premiumsupport/knowledge-center/ec2-linux-log-user-data/\">here</a> to give me some logging data, and added some console logs to help me orientate myself, leaving me with the following instructions in the User Data:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#!/bin/bash -xe\nexec &gt; &gt;(tee /var/log/user-data.log|logger -t user-data -s 2&gt;/dev/console) 2&gt;&amp;1\necho &quot;FIRST HELLO&quot;\napt-get -y update\necho &quot;hello after update&quot;\napt-get -y install ruby\necho &quot;hello after installing ruby&quot;\napt-get -y install wget\necho &quot;hello after installing wget&quot;\ncd /home/ubuntu\nwget https://aws-codedeploy-eu-west-2.s3.amazonaws.com/latest/install\necho &quot;hello after getting the installer&quot;\nchmod +x ./install\n./install auto\necho &quot;hello at the end&quot;</code></pre></div>\n<p>This narrowed down the issue to the step where we install ruby. It was at this point I remembered with sinking horror that there had in fact been a prompt when I had run through line my line myself where I had had to select yes to continue. I hadn’t taken much notice of it at the time, assuming that the -y command would skip through all of those. A bit more googling led me to <a href=\"https://unix.stackexchange.com/questions/146283/how-to-prevent-prompt-that-ask-to-restart-services-when-installing-libpq-dev\">this</a> which is exactly what I had happily tabbed through when doing it by hand.</p>\n<p>Thankfully, the suggestion to add <code class=\"language-text\">DEBIAN_FRONTEND=noninteractive</code> worked, giving me the following instructions to run on launch:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#!/bin/bash\nexport DEBIAN_FRONTEND=noninteractive\napt-get -y update\napt-get -y install ruby\napt-get -y install wget\ncd /home/ubuntu\nwget https://aws-codedeploy-eu-west-2.s3.amazonaws.com/latest/install\nchmod +x ./install\n./install auto</code></pre></div>\n<p>I have no idea why this isn’t in the instructions AWS provides. Maybe it doesn’t always run like that? Anyway, what I’ve learned today:</p>\n<ul>\n<li>find a way to read the logs asap if it isn’t already there</li>\n<li>take more notice of what I’m doing differently when I run through something step by step</li>\n<li>everything seems so easy afterwards</li>\n</ul>","fields":{"tagSlugs":["/tags/development/"]},"frontmatter":{"title":"Spike week day 1","tags":["Development"],"date":"2019-07-02","description":"We are currently having one of our quarterly spike weeks on our team, and for once I am managing to protect my own time and do my own spike. To help me remember what I've learned, I plan on writing what I did each day. DAY 1"}}},"pageContext":{"slug":"/posts/spike-week-day-1/"}}